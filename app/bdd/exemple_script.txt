==========///////////////////////============
=========//////REQUETE TEST//////============
=========////////////////////////============


afficher commande:

SELECT Id_Commande, commande.date_commande, commande.montant_total, utilisateur.nom, utilisateur.prenom 
FROM commande
JOIN utilisateur ON commande.id_utilisateur = utilisateur.Id_utilisateur;



detail commande:

SELECT detail_commande.id_commande, produit.nom AS Produit, detail_commande.quantité, produit.prix, (detail_commande.quantité * produit.prix) AS total
FROM detail_commande
JOIN produit ON detail_commande.id_produit = produit.id_Produit;


Voir tout les scores:

SELECT partie.Id_score, partie.score, partie.date_heure, utilisateur.nom, utilisateur.prenom
FROM partie
JOIN utilisateur ON partie.id_utilisateur = utilisateur.id_utilisateur
ORDER BY partie.score DESC;

detail profil
SELECT c.* 
FROM commerce AS c
INNER JOIN utilisateurs AS u ON c.id_utilisateur = u.id_utilisateur
WHERE BINARY u.email = "john.doe@example.com"

UPDATE commerce 
JOIN utilisateurs ON commerce.id_utilisateur = utilisateurs.id_utilisateur
SET commerce.adresse_livraison = 'Nouvelle adresse 123',
    commerce.telephone = '0612345678'
WHERE utilisateurs.email = 'email@example.com';

DELETE commerce 
FROM commerce
JOIN utilisateurs ON commerce.id_utilisateur = utilisateurs.id_utilisateur
WHERE utilisateurs.email = 'email@example.com';

SELECT 
                commandes.id_commande,
                commandes.date_heure,
                commandes.montant_total,
                produits.id_produit,
                produits.nom AS nom_produit,
                produits.description,
                produits.prix,
                detail_commande.quantité,
                (produits.prix * detail_commande.quantité) AS total_produit
            FROM commandes
            JOIN detail_commande ON commandes.id_commande = detail_commande.id_commande
            JOIN produits ON detail_commande.id_produit = produits.id_produit
            WHERE commandes.id_utilisateur = (SELECT id_utilisateur FROM utilisateurs WHERE email = :email)
            ORDER BY commandes.date_heure DESC;


SELECT 
    parties.id_partie,
    parties.score,
    parties.date_heure,
    (SELECT MAX(score) FROM parties WHERE id_utilisateur = utilisateurs.id_utilisateur) AS meilleur_score,
    (SELECT AVG(score) FROM parties WHERE id_utilisateur = utilisateurs.id_utilisateur) AS score_moyen,
    (SELECT COUNT(*) FROM parties WHERE id_utilisateur = utilisateurs.id_utilisateur) AS nombre_parties
FROM parties
JOIN utilisateurs ON parties.id_utilisateur = utilisateurs.id_utilisateur
WHERE utilisateurs.email = :email
ORDER BY parties.date_heure DESC;

==============///////////////////////////=============
    ==========////////DONNE TEST/////////==============
==============///////////////////////////=============

-- Insérer des utilisateurs
INSERT INTO utilisateurs (date_inscription, rôle, email, password)
VALUES 
('2025-03-01', 'utilisateur','john.doe@example.com', 'mdp123'),
('2025-03-02', 'utilisateur','alice.smith@example.com', 'mdp456'),
('2025-03-03', 'admin', 'admin@example.com', 'adminpass');

-- Insérer des produits
INSERT INTO produits (nom, description, prix, photo)
VALUES 
('Drone Orbe', 'Un drone en forme de sphère avec IA intégrée', 199.99,"img1.jpg"),
('Batterie longue durée', 'Batterie additionnelle pour le drone Orbe', 49.99, "img2.jpg"),
('Kit de réparation', 'Kit pour réparer les dommages légers du drone', 29.99, "img3.jpg");

-- Insérer des commandes
INSERT INTO commandes (date_heure, montant_total, id_utilisateur)
VALUES 
('2025-03-10', 249.98, 1), -- John Doe achète 2 produits
('2025-03-12', 49.99, 2);  -- Alice Smith achète 1 produit

-- Associer les produits aux commandes (détails de commande)
INSERT INTO detail_commande (id_commande, id_produit, quantité)
VALUES 
(1, 1, 1), -- John achète 1 Drone Orbe
(1, 2, 1), -- John achète 1 Batterie
(2, 2, 1); -- Alice achète 1 Batterie

-- Insérer des scores de partie
INSERT INTO parties (score, date_heure, id_utilisateur)
VALUES 
(1200, '2025-03-11 14:30:00', 1), 
(850, '2025-03-12 16:45:00', 2), 
(1500, '2025-03-13 18:20:00', 1);

-- Insérer des profils
INSERT INTO commerce (id_utilisateur, nom, prenom, adresse_livraison, ville, code_postal, pays, telephone, mode_paiement)
VALUES
(1, 'john', 'doe', '123 Rue de Paris', 'Paris', '75001', 'France', '0123456789', 'carte'),
(2, 'peter', 'doe' '456 Boulevard Saint-Germain', 'Paris', '75005', 'France', '0987654321', 'paypal'),
(3, 'dane', 'joe','789 Avenue de la République', 'Marseille', '13001', 'France', '0147253654', 'virement');

--inserer des messages--
INSERT INTO contacts (id_utilisateur, nom, email, message, created_at) 
VALUES 
(NULL, 'Jean Dupont', 'jean.dupont@example.com', 'Bonjour, j’aimerais avoir plus d’informations sur votre service.', NOW()),
(2, 'Alice Martin', 'alice.martin@example.com', 'J’ai rencontré un problème lors de l’inscription.', NOW()),
(NULL, 'Sophie Lemoine', 'sophie.lemoine@example.com', 'Je vous remercie pour votre travail, c’est super !', NOW()),
(4, 'Thomas Bernard', 'thomas.bernard@example.com', 'Est-il possible de modifier mon adresse e-mail ?', NOW()),
(NULL, 'David Moreau', 'david.moreau@example.com', 'Je ne parviens pas à accéder à mon compte.', NOW());


